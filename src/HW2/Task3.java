/**
 * Рекурсивное вычисление чисел Фибоначчи:
 * __
 * Описание: Написать функцию, которая возвращает n-тое число Фибоначчи.
 * Почему это процедурное программирование:
 * Здесь мы можем использовать рекурсивную процедуру,
 * где каждый вызов функции делает два дополнительных вызова (для n-1 и n-2).
 * Хотя это не самый эффективный способ решения, он хорошо демонстрирует концепцию процедурного программирования.
 * __
 * Эти задачи служат хорошими примерами того,
 *  как структурное и процедурное программирование может быть применено в реальных сценариях
 *
 * Задание: Напишите рекурсивную функцию для вычисления n-того числа Фибоначчи.
 *         Входные данные:
 *         Число n.
 *         Выходные данные:
 *         n-тое число Фибоначчи.
 */


package HW2;

import java.util.Scanner;

public class Task3 {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Введите число n: ");
        int n = sc.nextInt();

        System.out.printf("%d -e число фибонначи = %d", n, fibonacci(n));
    }

    public static int fibonacci(int num) {
        if (num <= 1) {
            return 0;
        } else if (num == 2) {
            return 1;
        } else {
            return fibonacci(num - 1) + fibonacci(num - 2);
        }
    }
}
